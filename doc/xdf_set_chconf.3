.\"Copyright 2010 (c) EPFL
.TH XDF_SET_CHCONF 3 2010 "EPFL" "xdffileio library manual"
.SH NAME
xdf_set_chconf, xdf_get_chconf - set or get the configuration of a
channel descriptor handle
.SH SYNOPSIS
.LP
.B #include <xdfio.h>
.sp
.BI "int xdf_set_chconf(struct xdfch* " ch ", enum xdfchfield " field ", ...);"
.br
.BI "int xdf_get_chconf(const struct xdfch* " ch ", enum xdfchfield " field ", ...);"
.br
.SH DESCRIPTION
.LP
\fBxdf_set_chconf\fP() sets the configuration of the channel referenced
by \fIch\fP according to the variable list of argument. This list is
composed of successive couple grouping one variable of type enum xdfchfield
defining the feature to be set and a value whose type depends on the
previous field type. The list \fBmust finish\fP by i\fBXDF_CHFIELD_NONE\fP.
.LP
\fBxdf_get_chconf\fP() gets the configuration of the channel referenced
by \fIch\fP according to the variable list of argument. The variable list is
the same list terminated by \fBXDF_CHFIELD_NONE\fP as for
\fBxdf_set_chconf\fP() excepting that the second part of the couple is not
that value but a \fBpointer to the value\fP.
.LP
Here is the list of admissible value. The type of value expected is provided
in the parenthesis (the expected type of the value for
\fBxdf_set_chconf\fP(), or a pointer to this type for
\fBxdf_get_chconf\fP()):
.TP 7
\fBXDF_CHFIELD_ARRAY_INDEX\fP (int)
Specify the array from/to which the channel value should be transfered.
.TP 7
\fBXDF_CHFIELD_ARRAY_OFFSET\fP (int)
Specify the offset in the array from/to which the channel value should be
transfered.
.TP 7
\fBXDF_CHFIELD_ARRAY_DIGITAL\fP (int)
Indicate that the data in the array from/to which the channel value should be
transfered is provided in digital unit. This means in practice that no scaling
is performed during the transfer from/to the disk (non zero indicate no
scaling).
.TP 7
\fBXDF_CHFIELD_ARRAY_TYPE\fP (enum xdftype)
specify the type in the channel should casted to/from when accessed in the
array.
.TP 7
\fBXDF_CHFIELD_STORED_TYPE\fP (enum xdftype)
Specify the type stored in the file of the channel value. If the XDF file
has been opened in XDF_READ, this field can only be get, i.e. cannot be set
by \fBxdf_set_chconf\fP().
.TP 7
\fBXDF_CHFIELD_STORED_LABEL\fP (const char*)
Set/get the label of the channel. This field cannot be set if the XDF file
is in mode XDF_READ.
.TP 7
\fBXDF_CHFIELD_PHYSICAL_MIN\fP (double)
Set/get the minimal value that a physical value can get. Cannot be set if
XDF_READ.
.TP 7
\fBXDF_CHFIELD_PHYSICAL_MAX\fP (double)
Set/get the maximal value that a physical value can get. Cannot be set if
XDF_READ.
ertza
.TP 7
\fBXDF_CHFIELD_DIGITAL_MIN\fP (double)
Set/get the minimal value that a digital value can get. Cannot be set if
XDF_READ.
.TP 7
\fBXDF_CHFIELD_DIGITAL_MAX\fP (double)
Set/get the maximal value that a digital value can get. Cannot be set if
XDF_READ.
.SH "RETURN VALUE"
.LP
The two functions returns 0 in case of success. Otherwise -1 is returned and
\fIerrno\fP is set appropriately.
.SH ERROR
.TP 7
.B EINVAL
\fIch\fP is NULL or \fIfield\fP is not a proper value of the enumeration
xdfchfield
.TP 7
.B EPERM
The request submitted to \fBxdf_set_chconf\fP() is not allowed for this
channel or is forbidden for file opened with the mode \fBXDF_READ\fP.
.SH EXAMPLES
.LP
Example of usage of \fBxdf_set_chconf\fP():
.sp
.RS
.nf
\fB
/* Assume xdf referenced an XDF file opened for writing */
unsigned int iarray = 2, offset = 0;
const char[] label = "Channel EEG";

hchxdf ch = xdf_add_channel(xdf);
xdf_set_chconf(ch, XDF_CHFIELD_ARRAY_INDEX, iarray,
                        XDF_CHFIELD_ARRAY_OFFSET, offset,
                        XDF_CHFIELD_STORED_LABEL, label,
                        XDF_CHFIELD_NONE);
\fP
.fi
.RE
.LP
Example of usage of \fBxdf_get_chconf\fP():
.sp
.RS
.nf
\fB
/* Assume xdf referenced an XDF file opened for reading */
unsigned int iarray, offset;
const char[128] label;

hchxdf ch = xdf_get_channel(xdf, 1);
xdf_get_chconf(ch, XDF_CHFIELD_ARRAY_INDEX, &iarray,
                        XDF_CHFIELD_ARRAY_OFFSET, &offset,
                        XDF_CHFIELD_STORED_LABEL, &label,
                        XDF_CHFIELD_NONE);

printf("iarray = %u\\n", iarray);
printf("offset = %u\\n", offset);
printf("label = %s\\n", label);

\fP
.fi
.RE
.SH "SEE ALSO"
.BR xdf_copy_chconf (3)

